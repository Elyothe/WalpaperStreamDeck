{"ast":null,"code":"var _jsxFileName = \"/Users/elyothe/Desktop/WalpaperStreamDeck/WalpaperStreamDeck/WalpaperStreamDeck/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; // Importer Router et Route\nimport axios from 'axios';\nimport ButtonAdd from './components/ButtonAdd';\nimport NavLink from './components/NavLink';\nimport Card from './components/card';\nimport MyWalpaper from './pages/MyWalpaper'; // La seconde page\nimport cardsData from './cardsData'; // Importer le fichier contenant les données\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchMessage = () => {\n    setLoading(true);\n    axios.get('http://localhost:5216/api/example/hello').then(response => {\n      setData(response.data);\n    }).catch(error => {\n      console.error('Erreur lors de la récupération des données:', error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this), \" \", data && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Donn\\xE9es: \", data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'center'\n            },\n            children: cardsData.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n              imageSrc: card.img // Utiliser imageSrc\n              ,\n              compressfile: card.compressfile // Passer compressfile\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/mywalpaper\",\n          children: [/*#__PURE__*/_jsxDEV(MyWalpaper, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"6J+d8m3MazvxoItrz0hPQSAL4X0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","axios","ButtonAdd","NavLink","Card","MyWalpaper","cardsData","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","fetchMessage","get","then","response","catch","error","console","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","style","display","flexWrap","justifyContent","map","card","index","imageSrc","img","compressfile","_c","$RefreshReg$"],"sources":["/Users/elyothe/Desktop/WalpaperStreamDeck/WalpaperStreamDeck/WalpaperStreamDeck/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; // Importer Router et Route\nimport axios from 'axios';\nimport ButtonAdd from './components/ButtonAdd';\nimport NavLink from './components/NavLink';\nimport Card from './components/card';\nimport MyWalpaper from './pages/MyWalpaper'; // La seconde page\nimport cardsData from './cardsData'; // Importer le fichier contenant les données\n\nconst App = () => {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const fetchMessage = () => {\n        setLoading(true);\n        axios.get('http://localhost:5216/api/example/hello')\n            .then(response => {\n                setData(response.data);\n            })\n            .catch(error => {\n                console.error('Erreur lors de la récupération des données:', error);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Router>\n            <div>\n                <NavLink /> {/* Affichage de la navigation */}\n                \n                {loading && <p>Chargement...</p>} {/* Affiche un message pendant le chargement */}\n                {data && <p>Données: {data}</p>} {/* Affiche les données récupérées */}\n\n                {/* Configuration des routes */}\n                <Switch>\n                    <Route path=\"/\" exact>\n                        {/* Affichage des cartes sur la page d'accueil */}\n                        <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n                            {cardsData.map((card, index) => (\n                                <Card \n                                    key={index} \n                                    imageSrc={card.img} // Utiliser imageSrc\n                                    compressfile={card.compressfile} // Passer compressfile\n                                />\n                            ))}\n                        </div>\n                    </Route>\n                    <Route path=\"/mywalpaper\">\n                        <MyWalpaper /> {/* Affichage de la seconde page */}\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}