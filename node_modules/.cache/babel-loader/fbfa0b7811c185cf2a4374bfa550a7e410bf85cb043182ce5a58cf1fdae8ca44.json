{"ast":null,"code":"var _jsxFileName = \"/Users/elyothe/Desktop/WalpaperStreamDeck/WalpaperStreamDeck/WalpaperStreamDeck/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ButtonAdd from './components/ButtonAdd';\nimport NavLink from './components/NavLink';\nimport Card from './components/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchMessage = () => {\n    setLoading(true);\n    axios.get('http://localhost:5216/api/example/hello').then(response => {\n      setData(response.data);\n    }).catch(error => {\n      console.error('Erreur lors de la récupération des données:', error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  // Données pour les cartes\n  const cardsData = [{\n    img: 'http://localhost:3000/images/image-ia-exemple.png',\n    // Ajoutez une image valide ici\n    title: 'Test',\n    description: 'Ceci est une description de test.'\n  }, {\n    img: '',\n    // Exemple d'image supplémentaire\n    title: 'Paysage',\n    description: 'Un magnifique paysage.'\n  }, {\n    img: 'https://images.unsplash.com/photo-1541981208-4c4a11e2d9e4',\n    // Exemple d'image supplémentaire\n    title: 'Mer',\n    description: 'Vue sur l\\'océan.'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(ButtonAdd, {\n      onClick: fetchMessage,\n      label: 'Import',\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this), \" \", data && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Donn\\xE9es: \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n      },\n      children: cardsData.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        imageSrc: card.img // Utiliser imageSrc au lieu de img\n        ,\n        title: card.title,\n        description: card.description\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"6J+d8m3MazvxoItrz0hPQSAL4X0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","ButtonAdd","NavLink","Card","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","fetchMessage","get","then","response","catch","error","console","finally","cardsData","img","title","description","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","label","disabled","style","display","flexWrap","justifyContent","map","card","index","imageSrc","_c","$RefreshReg$"],"sources":["/Users/elyothe/Desktop/WalpaperStreamDeck/WalpaperStreamDeck/WalpaperStreamDeck/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport ButtonAdd from './components/ButtonAdd';\nimport NavLink from './components/NavLink';\nimport Card from './components/card';\n\nconst App = () => {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const fetchMessage = () => {\n        setLoading(true);\n        axios.get('http://localhost:5216/api/example/hello')\n            .then(response => {\n                setData(response.data);\n            })\n            .catch(error => {\n                console.error('Erreur lors de la récupération des données:', error);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    // Données pour les cartes\n    const cardsData = [\n        {\n            img: 'http://localhost:3000/images/image-ia-exemple.png', // Ajoutez une image valide ici\n            title: 'Test',\n            description: 'Ceci est une description de test.',\n        },\n        {\n            img: '', // Exemple d'image supplémentaire\n            title: 'Paysage',\n            description: 'Un magnifique paysage.',\n        },\n        {\n            img: 'https://images.unsplash.com/photo-1541981208-4c4a11e2d9e4', // Exemple d'image supplémentaire\n            title: 'Mer',\n            description: 'Vue sur l\\'océan.',\n        },\n    ];\n\n    return (\n        <div>\n            <NavLink /> {/* Affichage de la navigation */}\n            <ButtonAdd \n                onClick={fetchMessage} \n                label={'Import'} \n                disabled={loading} \n            />\n            {loading && <p>Chargement...</p>} {/* Affiche un message pendant le chargement */}\n            {data && <p>Données: {data}</p>} {/* Affiche les données récupérées */}\n\n            {/* Affichage des cartes */}\n            <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n                {cardsData.map((card, index) => (\n                    <Card \n                        key={index} \n                        imageSrc={card.img} // Utiliser imageSrc au lieu de img\n                        title={card.title} \n                        description={card.description} \n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}